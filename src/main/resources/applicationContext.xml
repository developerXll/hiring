<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xsi:schemaLocation="http://www.springframework.org/schema/beans
  	   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
  	   http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
  
  <!-- hibernate start -->
  <context:property-placeholder location="classpath*:/jdbc.properties" />
  
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="50" />  
        <property name="maxWait" value="200" />
        <property name="maxIdle" value="10000" />  
        <property name="defaultAutoCommit" value="false" />  
        <property name="timeBetweenEvictionRunsMillis" value="3600000" />
        <property name="minEvictableIdleTimeMillis" value="3600000" />
    </bean>
  
  <!-- 配置sessionFactory -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />

        <!-- hibernate的相关属性配置 -->
        <property name="hibernateProperties">
            <value>
                <!-- 设置数据库方言 -->
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                <!-- 设置自动创建|更新|验证数据库表结构 -->
                hibernate.hbm2ddl.auto=update
                <!-- 是否在控制台显示sql -->
                hibernate.show_sql=true
                <!-- 是否格式化sql，优化显示 -->
                hibernate.format_sql=true
                <!-- 是否开启二级缓存 -->
                hibernate.cache.use_second_level_cache=false
                <!-- 是否开启查询缓存 -->
                hibernate.cache.use_query_cache=false
                <!-- 数据库批量查询最大数 -->
                hibernate.jdbc.fetch_size=50
                <!-- 数据库批量更新、添加、删除操作最大数 -->
                hibernate.jdbc.batch_size=50
                <!-- 是否自动提交事务 -->
                hibernate.connection.autocommit=true
                <!-- 指定hibernate在何时释放JDBC连接 -->
                hibernate.connection.release_mode=auto
                <!-- 创建session方式 hibernate4.x 的方式 -->
                hibernate.transaction.coordinator_class=jdbc
                <!-- javax.persistence.validation.mode默认情况下是auto的，就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包,所以把它设置为none即可 -->
                javax.persistence.validation.mode=none
            </value>
        </property>
        <!-- 自动扫描实体对象 包结构中存放实体类 -->
        <property name="packagesToScan" value="com.hiring.bean" />
    </bean>
    
    <!-- 定义 Autowired  自动注入 bean -->
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> 
    
    <!-- 定义事务管理 -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
        	<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="del*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="*" read-only="true" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>
    <!-- 定义切面,执行session操作 -->
    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* com.hiring.service.impl.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
    </aop:config>
  <!-- hibernate end -->
  
  <!-- freemarker基础配置 -->
  <bean id="freemarkerConfig"
      class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    <property name="templateLoaderPath" value="/html/" />
    <property name="freemarkerSettings">
      <props>
        <prop key="template_update_delay">0</prop>
        <prop key="default_encoding">UTF-8</prop>
        <prop key="number_format">0.##########</prop>
        <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
        <prop key="classic_compatible">true</prop>
        <prop key="template_exception_handler">ignore</prop>
        <prop key="auto_import">/common/spring.ftl as spring</prop>
      </props>
    </property>
  </bean>
  
  <!-- 扫描业务层service实现类 -->
  <context:component-scan base-package="com.hiring.**.impl" />
     
</beans>